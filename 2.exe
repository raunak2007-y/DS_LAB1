#include <iostream>
using namespace std;

class Node {
public:
    int data;
    Node* next;

    Node(int val) {
        data = val;
        next = nullptr;
    }
};

class SinglyLinkedList {
    Node* head;

public:
    SinglyLinkedList() {
        head = nullptr;
    }

    // Function to insert node at end
    void insertAtEnd(int val) {
        Node* newNode = new Node(val);
        if (head == nullptr) {
            head = newNode;
            return;
        }
        Node* temp = head;
        while (temp->next != nullptr)
            temp = temp->next;
        temp->next = newNode;
    }

    // Function to display the list
    void display() {
        if (head == nullptr) {
            cout << "List is empty.\n";
            return;
        }
        Node* temp = head;
        while (temp != nullptr) {
            cout << temp->data;
            if (temp->next != nullptr)
                cout << "->";
            temp = temp->next;
        }
        cout << endl;
    }

    // Function to count and delete all occurrences of a given key
    void countAndDelete(int key) {
        int count = 0;

        // Step 1: Delete occurrences at the beginning
        while (head != nullptr && head->data == key) {
            Node* temp = head;
            head = head->next;
            delete temp;
            count++;
        }

        // Step 2: Delete occurrences in the middle or end
        Node* current = head;
        while (current != nullptr && current->next != nullptr) {
            if (current->next->data == key) {
                Node* temp = current->next;
                current->next = current->next->next;
                delete temp;
                count++;
            } else {
                current = current->next;
            }
        }

        // Step 3: Display results
        cout << "Count: " << count << endl;
        cout << "Updated Linked List: ";
        display();
    }
};

// ---------------- MAIN FUNCTION ----------------
int main() {
    SinglyLinkedList sll;
    
    // Example Input: 1->2->1->2->1->3->1
    sll.insertAtEnd(1);
    sll.insertAtEnd(2);
    sll.insertAtEnd(1);
    sll.insertAtEnd(2);
    sll.insertAtEnd(1);
    sll.insertAtEnd(3);
    sll.insertAtEnd(1);

    cout << "Original Linked List: ";
    sll.display();

    int key;
    cout << "Enter key to delete: ";
    cin >> key;

    sll.countAndDelete(key);

    return 0;
}
